<Activity mc:Ignorable="sap sap2010" x:Class="IB_Performer_ProcessTransaction_1" this:IB_Performer_ProcessTransaction_1.in_TaskID="13248227" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mg="clr-namespace:Microsoft.Graph;assembly=Microsoft.Graph" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upat="clr-namespace:UiPath.Persistence.Activities.Tasks;assembly=UiPath.Persistence.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TaskID" Type="InArgument(x:String)" />
    <x:Property Name="in_TaskLabel" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property Name="in_Config_Data_Tables" Type="InArgument(scg:Dictionary(x:String, sd:DataTable))" />
    <x:Property Name="out_postponed" Type="OutArgument(x:Boolean)" />
    <x:Property Name="io_LogConfig" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="io_NotificationsTable" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="io_Performer_Run_Report" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="io_Terminate_Performer" Type="InOutArgument(x:Boolean)" />
    <x:Property Name="out_System_Exception" Type="OutArgument(s:Exception)" />
    <x:Property Name="out_Business_Rule_Exception" Type="OutArgument(ui:BusinessRuleException)" />
    <x:Property Name="out_dt_Exception_Details" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_dt_Invoice_LineItem_Data_Table_Report" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_dt_Invoice_Header_Data_Table_Report" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="in_dt_Invoice_Header_Data_Table" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_dt_Invoice_LineItem_Data_Table" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <this:IB_Performer_ProcessTransaction_1.in_dt_Invoice_Header_Data_Table>
    <InArgument x:TypeArguments="sd:DataTable" />
  </this:IB_Performer_ProcessTransaction_1.in_dt_Invoice_Header_Data_Table>
  <this:IB_Performer_ProcessTransaction_1.in_dt_Invoice_LineItem_Data_Table>
    <InArgument x:TypeArguments="sd:DataTable" />
  </this:IB_Performer_ProcessTransaction_1.in_dt_Invoice_LineItem_Data_Table>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1024,1550</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>IB_Performer_ProcessTransaction_1_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Persistence.Activities.Tasks</x:String>
      <x:String>UiPath.Persistence.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.GSuite.Activities.Drive.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.GSuite.Drive.Models</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.GSuite.Activities.Sheets.Enums</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Files.Models</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Excel.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Excel</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.Persistence.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.FTP.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Python.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Core</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="IB_Performer_ProcessTransaction" sap:VirtualizedContainerService.HintSize="1026,1485" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="TaskID" />
      <Variable x:TypeArguments="x:String" Name="TaskURL" />
      <Variable x:TypeArguments="x:String" Name="formLabel" />
      <Variable x:TypeArguments="njl:JObject" Name="InvoiceHeaderData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_InvoiceHeaderTableValues" />
      <Variable x:TypeArguments="njl:JObject" Name="InvoiceLineData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_InvoiceLineTableValues" />
      <Variable x:TypeArguments="x:String" Name="GLString" />
      <Variable x:TypeArguments="x:String" Name="DocType" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_cleansedLineTable" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_cleansedHeaderDataTable" />
      <Variable x:TypeArguments="njl:JArray" Name="invoiceFileID" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart DisplayName="Process Workflow" sap:VirtualizedContainerService.HintSize="964,1374" sap2010:WorkflowViewState.IdRef="Flowchart_1">
      <Flowchart.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="cleansedLineDataTable" />
      </Flowchart.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <av:Point x:Key="ShapeLocation">260,2.3999999999999986</av:Point>
          <av:Size x:Key="ShapeSize">60,75</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">290,77.6 280,77.6 280,89.2</av:PointCollection>
          <x:Double x:Key="Height">1337.2</x:Double>
          <x:Double x:Key="Width">929.6</x:Double>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Flowchart.StartNode>
        <x:Reference>__ReferenceID13</x:Reference>
      </Flowchart.StartNode>
      <FlowSwitch x:TypeArguments="x:String" Default="{x:Reference __ReferenceID3}" x:Name="__ReferenceID4" DisplayName="Flow Switch" Expression="[formLabel]" sap:VirtualizedContainerService.HintSize="70,87" sap2010:WorkflowViewState.IdRef="FlowSwitch`1_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">824.8,216.4</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="POConnector">824.8,281.65 794.8,281.65 794.8,459.6 550,459.6</av:PointCollection>
            <av:PointCollection x:Key="DCRConnector">877.3,303.4 877.3,333.4 710,333.4 710,623.6</av:PointCollection>
            <av:PointCollection x:Key="GLConnector">859.8,303.4 859.8,649.6 810,649.6</av:PointCollection>
            <av:PointCollection x:Key="Default">842.4,303.6 842.4,330 390,330</av:PointCollection>
            <av:PointCollection x:Key="(null)Connector">842.4,303.6 842.4,330 390,330</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <FlowStep x:Key="PO" x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">350,433.6</av:Point>
              <av:Size x:Key="ShapeSize">200,52</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">450,485.6 450,523.6</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Billing String Workflow.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="IB_Performer_Workflows\Billing String Workflow.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_fileURL">
                <Literal x:TypeArguments="x:String">C:\Users\AditiBundela\Downloads\Invoice.pdf</Literal>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_DocType">
                <VisualBasicValue x:TypeArguments="x:String" ExpressionText="DocType" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_PONumber">
                <VisualBasicValue x:TypeArguments="x:String" ExpressionText="dt_InvoiceHeaderTableValues.Rows(0).Item(&quot;CustomerPONumber&quot;).ToString" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_AcctNumber" />
              <InArgument x:TypeArguments="x:String" x:Key="in_SupplierNumber">
                <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;Non PO Supplier Number for Billing String&quot;).ToString" />
              </InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_invoiceHeaderTable">
                <VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="dt_InvoiceHeaderTableValues" />
              </InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_invoiceLineTable">
                <VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="dt_InvoiceLineTableValues" />
              </InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_TaskId">
                <VisualBasicReference x:TypeArguments="x:String" ExpressionText="TaskID" />
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_TaskURL">
                <VisualBasicReference x:TypeArguments="x:String" ExpressionText="TaskURL" />
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_GLString">
                <VisualBasicReference x:TypeArguments="x:String" ExpressionText="GLString" />
              </OutArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                <VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">350,523.6</av:Point>
                  <av:Size x:Key="ShapeSize">200,52</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">450,576.4 450,606.4</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[NOT string.IsNullOrEmpty(TaskID)]" DisplayName="Check item was sent to Action Center and Postpone" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="If_6">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="476.8,559.2" sap2010:WorkflowViewState.IdRef="Sequence_23">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="MongoDB_Workflows\Python_MongoDB_UpdateDocument.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="MongoDB_Workflows\Python_MongoDB_UpdateDocument.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_MongoConnectionString">[in_Config("MongoConnectionString").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_MongoDatabaseName">[in_Config("MongoDatabaseName").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_MongoCollectionName">[in_Config("MongoCollectionName").ToString]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_Results" />
                        <OutArgument x:TypeArguments="njl:JObject" x:Key="out_ResultsJSON" />
                        <InArgument x:TypeArguments="x:String" x:Key="in_UpdateQuery">[in_Config("Python Update Query - TaskID").ToString.Replace("&lt;TaskID&gt;",TaskID)]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_SelectQuery">[in_Config("Python Select Query - TransactionID").ToString.Replace("&lt;TransactionID&gt;",in_TransactionItem.Reference.ToString)]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_PythonScriptLocation">[in_Config("Python General Script Location").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_PythonMethodName">[in_Config("Python General Script Update Method Name").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_PythonLibraryPath">[in_Config("Python Library Path").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_PythonFolderPath">[in_Config("Python Folder Path").ToString]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:PostponeTransactionItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DeferDate="03/13/2024 14:44:00" DisplayName="Postpone Transaction Item" FolderPath="in_Config(&quot;Orchestrator Folder Name&quot;).ToString" sap:VirtualizedContainerService.HintSize="433.6,194.4" sap2010:WorkflowViewState.IdRef="PostponeTransactionItem_4" TransactionItem="[in_TransactionItem]" />
                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_15">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[out_postponed]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="553.6,448.8" sap2010:WorkflowViewState.IdRef="Sequence_24">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_InvoiceLineTableValues]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="510.4,359.2" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                      <ui:ForEachRow.Body>
                        <ActivityAction x:TypeArguments="sd:DataRow">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_26">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_13">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[CurrentRow("BillingString")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[GLString]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachRow.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEachRow>
                  </Sequence>
                </If.Else>
              </If>
              <FlowStep.Next>
                <FlowDecision x:Name="__ReferenceID7" Condition="[out_postponed]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:Point x:Key="ShapeLocation">410.4,606.4</av:Point>
                      <av:Size x:Key="ShapeSize">79,87</av:Size>
                      <av:PointCollection x:Key="TrueConnector">410.4,650 380.3999999999999,650 380.3999999999999,950.4 610,950.4</av:PointCollection>
                      <av:PointCollection x:Key="FalseConnector">489.59999999999997,650 610,650</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">610,912.8</av:Point>
                          <av:Size x:Key="ShapeSize">200,75</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Comment sap:VirtualizedContainerService.HintSize="200,75" sap2010:WorkflowViewState.IdRef="Comment_1" Text="// Ending process transaction">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:Comment>
                    </FlowStep>
                  </FlowDecision.True>
                  <FlowDecision.False>
                    <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">610,623.6</av:Point>
                          <av:Size x:Key="ShapeSize">200,52</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">710,675.6 710,693.6</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="IB_Performer_Process_2.0.0.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="IB_Performer_Process_2.0.0.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">
                            <VisualBasicValue x:TypeArguments="ui:QueueItem" ExpressionText="in_TransactionItem" />
                          </InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                            <VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
                          </InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)" x:Key="in_Config_Data_Tables">
                            <VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)" ExpressionText="in_Config_Data_Tables" />
                          </InArgument>
                          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_LogConfig">
                            <VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="io_LogConfig" />
                          </InOutArgument>
                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_NotificationsTable">
                            <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="io_NotificationsTable" />
                          </InOutArgument>
                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_Performer_Run_Report">
                            <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="io_Performer_Run_Report" />
                          </InOutArgument>
                          <InOutArgument x:TypeArguments="x:Boolean" x:Key="io_Terminate_Performer">
                            <VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="io_Terminate_Performer" />
                          </InOutArgument>
                          <OutArgument x:TypeArguments="s:Exception" x:Key="out_System_Exception">
                            <VisualBasicReference x:TypeArguments="s:Exception" ExpressionText="out_System_Exception" />
                          </OutArgument>
                          <OutArgument x:TypeArguments="ui:BusinessRuleException" x:Key="out_Business_Rule_Exception">
                            <VisualBasicReference x:TypeArguments="ui:BusinessRuleException" ExpressionText="out_Business_Rule_Exception" />
                          </OutArgument>
                          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_Exception_Details">
                            <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="out_dt_Exception_Details" />
                          </OutArgument>
                          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_Invoice_LineItem_Data_Table_Report">
                            <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="cleansedLineDataTable" />
                          </OutArgument>
                          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_Invoice_Header_Data_Table_Report">
                            <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="dt_cleansedHeaderDataTable" />
                          </OutArgument>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_Invoice_Header_Data_Table">
                            <VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="dt_InvoiceHeaderTableValues" />
                          </InArgument>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_Invoice_LineItem_Data_Table">
                            <VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="dt_InvoiceLineTableValues" />
                          </InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID11" sap2010:WorkflowViewState.IdRef="FlowStep_8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">610,693.6</av:Point>
                              <av:Size x:Key="ShapeSize">200,52</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">710,746.4 710,763.6</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
                            <ueab:ExcelProcessScopeX.Body>
                              <ActivityAction x:TypeArguments="ui:IExcelProcess">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="512,284" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="mg:DriveItem" Name="ExcelFIle" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dt_InvoiceHeaderTableValues]" DisplayName="Write Invoice Header Data" sap:VirtualizedContainerService.HintSize="388,116" sap2010:WorkflowViewState.IdRef="WriteRange_4" SheetName="[in_Config(&quot;Output File Header Sheet Name&quot;).ToString]" WorkbookPath="[in_Config(&quot;Output File Path&quot;).ToString+in_TransactionItem.Reference.ToString+&quot;.xlsx&quot;]" />
                                    <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dt_InvoiceLineTableValues]" DisplayName="Write Invoice Line Data" sap:VirtualizedContainerService.HintSize="388,116" sap2010:WorkflowViewState.IdRef="WriteRange_5" SheetName="[in_Config(&quot;Output File Line Sheet Name&quot;).ToString]" WorkbookPath="[in_Config(&quot;Output File Path&quot;).ToString+in_TransactionItem.Reference.ToString+&quot;.xlsx&quot;]" />
                                  </Sequence>
                                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="450,52" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                                    <ui:CommentOut.Body>
                                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,192" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="[in_Config(&quot;Output File Path&quot;).ToString+in_TransactionItem.Reference.ToString+&quot;.xlsx&quot;]">
                                          <ueab:ExcelApplicationCard.Body>
                                            <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                              </ActivityAction.Argument>
                                            </ActivityAction>
                                          </ueab:ExcelApplicationCard.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ueab:ExcelApplicationCard>
                                      </Sequence>
                                    </ui:CommentOut.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:CommentOut>
                                </Sequence>
                              </ActivityAction>
                            </ueab:ExcelProcessScopeX.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ueab:ExcelProcessScopeX>
                          <FlowStep.Next>
                            <FlowStep x:Name="__ReferenceID9" sap2010:WorkflowViewState.IdRef="FlowStep_9">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">610,763.6</av:Point>
                                  <av:Size x:Key="ShapeSize">200,52</av:Size>
                                  <av:PointCollection x:Key="ConnectorLocation">710,816.4 710,833.6</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:CommentOut sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                    <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dt_InvoiceHeaderTableValues]" DisplayName="Write Header Data in Workbook" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Invoice Header Table" WorkbookPath="[&quot;C:\WonderBotz\InvoiceBotz\WBZ_InvoiceBotz_Performer\IB_Performer_Data\IB_Performer_Output_Files\&quot;+in_TransactionItem.Reference.ToString+&quot;.xlsx&quot;]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:WriteRange>
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                              <FlowStep.Next>
                                <FlowStep x:Name="__ReferenceID10" sap2010:WorkflowViewState.IdRef="FlowStep_10">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">610,833.6</av:Point>
                                      <av:Size x:Key="ShapeSize">200,52</av:Size>
                                      <av:PointCollection x:Key="ConnectorLocation">710,886.4 710,912.8</av:PointCollection>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:CommentOut sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                                    <ui:CommentOut.Body>
                                      <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                        <ui:WriteRange StartingCell="{x:Null}" AddHeaders="False" DataTable="[dt_InvoiceLineTableValues]" DisplayName="Write Line Data in Workbook" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="Invoice Line Details" WorkbookPath="[&quot;C:\WonderBotz\InvoiceBotz\WBZ_InvoiceBotz_Performer\IB_Performer_Data\IB_Performer_Output_Files\&quot;+in_TransactionItem.Reference.ToString+&quot;.xlsx&quot;]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:WriteRange>
                                      </Sequence>
                                    </ui:CommentOut.Body>
                                  </ui:CommentOut>
                                  <FlowStep.Next>
                                    <x:Reference>__ReferenceID0</x:Reference>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowDecision.False>
                </FlowDecision>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
        <x:Reference>__ReferenceID1<x:Key>GL</x:Key></x:Reference>
        <x:Reference>__ReferenceID1<x:Key>DCR</x:Key></x:Reference>
        <FlowStep x:Key="{x:Null}" x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">190,303.6</av:Point>
              <av:Size x:Key="ShapeSize">200,52</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">290,356.40000000000003 290,416.4</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[dt_InvoiceHeaderTableValues.Rows(0).Item(&quot;CustomerPONumber&quot;).ToString = &quot;&quot;]" DisplayName="Check if it is PO Invoice" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="If_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_15">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_18">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[DocType]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">NON-PO</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="553.6,1107.2" sap2010:WorkflowViewState.IdRef="Sequence_16">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_19">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[DocType]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">PO</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="PO Line Match.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="510.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="IB_Performer_Workflows\PO Line Match.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_InvoiceLineTable">[dt_InvoiceLineTableValues]</InArgument>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_POTable" />
                    <InArgument x:TypeArguments="x:String" x:Key="in_fileURL">[in_TransactionItem.SpecificContent("Invoice_File_Path").ToString]</InArgument>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="in_invoiceHeaderTable">[dt_InvoiceHeaderTableValues]</InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_TaskID">[TaskID]</OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_TaskURL">[TaskURL]</OutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_POFileURL">[in_Config("PO Table File Path").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_POFileSheetName">[in_Config("PO Table File Sheet Name").ToString]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <If Condition="[NOT string.IsNullOrEmpty(TaskID)]" DisplayName="Check item was sent to Action Center and Postpone" sap:VirtualizedContainerService.HintSize="510.4,742.4" sap2010:WorkflowViewState.IdRef="If_3">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="476.8,559.2" sap2010:WorkflowViewState.IdRef="Sequence_17">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="MongoDB_Workflows\Python_MongoDB_UpdateDocument.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="MongoDB_Workflows\Python_MongoDB_UpdateDocument.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_MongoConnectionString">[in_Config("MongoConnectionString").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_MongoDatabaseName">[in_Config("MongoDatabaseName").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_MongoCollectionName">[in_Config("MongoCollectionName").ToString]</InArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="out_Results" />
                          <OutArgument x:TypeArguments="njl:JObject" x:Key="out_ResultsJSON" />
                          <InArgument x:TypeArguments="x:String" x:Key="in_UpdateQuery">[in_Config("Python Update Query - TaskID").ToString.Replace("&lt;TaskID&gt;",TaskID)]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_SelectQuery">[in_Config("Python Select Query - TransactionID").ToString.Replace("&lt;TransactionID&gt;",in_TransactionItem.Reference.ToString)]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_PythonScriptLocation">[in_Config("Python General Script Location").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_PythonMethodName">[in_Config("Python General Script Update Method Name").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_PythonLibraryPath">[in_Config("Python Library Path").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_PythonFolderPath">[in_Config("Python Folder Path").ToString]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:PostponeTransactionItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DeferDate="[CDate(Now.AddHours(3).ToString(&quot;M/d/yyyy&quot;))]" DisplayName="Postpone Transaction Item" FolderPath="WBZ_Main" sap:VirtualizedContainerService.HintSize="433.6,194.4" sap2010:WorkflowViewState.IdRef="PostponeTransactionItem_1" TransactionItem="[in_TransactionItem]" />
                      <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_14">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[out_postponed]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="300,82.4" sap2010:WorkflowViewState.IdRef="Sequence_18">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </If.Else>
          </If>
          <FlowStep.Next>
            <FlowDecision x:Name="__ReferenceID6" Condition="[out_postponed]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1" True="{x:Reference __ReferenceID0}" False="{x:Reference __ReferenceID2}">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">250.39999999999998,416.4</av:Point>
                  <av:Size x:Key="ShapeSize">79,87</av:Size>
                  <av:PointCollection x:Key="TrueConnector">250.39999999999998,460 217.5999999999999,460 217.5999999999999,950.4 610,950.4</av:PointCollection>
                  <av:PointCollection x:Key="FalseConnector">329.59999999999997,460 350,460</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </FlowDecision>
          </FlowStep.Next>
        </FlowStep>
      </FlowSwitch>
      <x:Reference>__ReferenceID2</x:Reference>
      <x:Reference>__ReferenceID1</x:Reference>
      <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">180,203.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">280,256.4 280,286.4 160,286.4 160,196.39999999999998 90,196.39999999999998 90,226.39999999999998</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[in_TaskID.IsNullOrEmpty Or in_TaskLabel.IsNullOrEmpty]" DisplayName="Check if Item Processed Once" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="If_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="552,1614" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="IB_Performer_Workflows\Query Mongo DB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="510,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="MongoDB_Workflows\Query Mongo DB.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_pythonScriptLocation">[in_Config("Python Find Query Script Location").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_pythonMethodName">[in_Config("Python Find Query Script Method Name").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
                  <OutArgument x:TypeArguments="njl:JArray" x:Key="out_InvoiceData">[invoiceFileID]</OutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_queryFilter">[in_Config("Python Find Query Script Query Filter - TransactionID").ToString.Replace("&lt;TransactionID&gt;",in_TransactionItem.Reference.ToString)]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_projection">[in_Config("Python Find Query Script Header Projection -SendToWorkQueue").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_LibraryPath">[in_Config("Python Library Path").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_PythonPath">[in_Config("Python Folder Path").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_MongoConnectionString">[in_Config("MongoConnectionString").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_MongoDatabaseName">[in_Config("MongoDatabaseName").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_MongoCollectionName">[in_Config("MongoCollectionName").ToString]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <If Condition="[invoiceFileID(0).Item(&quot;content&quot;).Item(&quot;SentToWorkQueue&quot;).ToString = in_Config(&quot;Document Validation Work Queue Name&quot;).ToString]" sap:VirtualizedContainerService.HintSize="510,1373" sap2010:WorkflowViewState.IdRef="If_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="476,531" sap2010:WorkflowViewState.IdRef="Sequence_36">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,90" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;Current Time&quot;+DateTime.Now.ToString+&quot;3 Hour Postpone Time:- &quot;+(CDate(Now.AddHours(3).ToString(&quot;M/d/yyyy&quot;))).ToString]" />
                    <ui:PostponeTransactionItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DeferDate="[DateTime.Now.AddHours(3)]" DisplayName="Postpone Transaction Item" sap:VirtualizedContainerService.HintSize="434,192" sap2010:WorkflowViewState.IdRef="PostponeTransactionItem_5" TransactionItem="[in_TransactionItem]" />
                    <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_23">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[out_postponed]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="398,660" sap2010:WorkflowViewState.IdRef="Sequence_37">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Get Invoice Header Data From Mongo DB" sap:VirtualizedContainerService.HintSize="356,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="MongoDB_Workflows\Query Mongo DB.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_pythonScriptLocation">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;Python Find Query Script Location&quot;).ToString" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_pythonMethodName">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;Python Find Query Script Method Name&quot;).ToString" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
                        <OutArgument x:TypeArguments="njl:JArray" x:Key="out_InvoiceData">
                          <VisualBasicReference x:TypeArguments="njl:JArray" ExpressionText="invoiceFileID" />
                        </OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_queryFilter">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;Python Find Query Script Query Filter - TransactionID&quot;).ToString.Replace(&quot;&lt;TransactionID&gt;&quot;,in_TransactionItem.Reference.ToString)" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_projection">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;Python Find Query Script Header Projection - Header Data&quot;).ToString" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_LibraryPath">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;Python Library Path&quot;).ToString" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_PythonPath">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;Python Folder Path&quot;).ToString" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_MongoConnectionString">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;MongoConnectionString&quot;).ToString" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_MongoDatabaseName">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;MongoDatabaseName&quot;).ToString" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_MongoCollectionName">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;MongoCollectionName&quot;).ToString" />
                        </InArgument>
                        <InArgument x:TypeArguments="njl:JObject" x:Key="out_InvoiceJobject" />
                        <InArgument x:TypeArguments="njl:JObject" x:Key="out_InvoiceJobject2" />
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Get Header Table OCR Value from Mongo DB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="356,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="IB_Performer_Workflows\Get Header Table OCR Value from Mongo DB.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="njl:JArray" x:Key="in_InvoiceData">
                          <VisualBasicValue x:TypeArguments="njl:JArray" ExpressionText="invoiceFileID" />
                        </InArgument>
                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_TransposeInvoiceHeaderTable">
                          <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="dt_InvoiceHeaderTableValues" />
                        </OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Get Invoice Line Details from Mongo DB" sap:VirtualizedContainerService.HintSize="356,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="MongoDB_Workflows\Query Mongo DB.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_pythonScriptLocation">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;Python Find Query Script Location&quot;).ToString" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_pythonMethodName">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;Python Find Query Script Method Name&quot;).ToString" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
                        <OutArgument x:TypeArguments="njl:JArray" x:Key="out_InvoiceData">
                          <VisualBasicReference x:TypeArguments="njl:JArray" ExpressionText="invoiceFileID" />
                        </OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_queryFilter">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;Python Find Query Script Query Filter - TransactionID&quot;).ToString.Replace(&quot;&lt;TransactionID&gt;&quot;,in_TransactionItem.Reference.ToString)" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_projection">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;Python Find Query Script Line Projection - Line Data&quot;).ToString" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_LibraryPath">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;Python Library Path&quot;).ToString" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_PythonPath">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;Python Folder Path&quot;).ToString" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_MongoConnectionString">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;MongoConnectionString&quot;).ToString" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_MongoDatabaseName">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;MongoDatabaseName&quot;).ToString" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_MongoCollectionName">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;MongoCollectionName&quot;).ToString" />
                        </InArgument>
                        <InArgument x:TypeArguments="njl:JObject" x:Key="out_InvoiceJobject" />
                        <InArgument x:TypeArguments="njl:JObject" x:Key="out_InvoiceJobject2" />
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Get Line Level OCR Value from Mongo DB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="356,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="IB_Performer_Workflows\Get Line Level OCR Value from Mongo DB.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
                        <InArgument x:TypeArguments="njl:JArray" x:Key="in_invoiceData">
                          <VisualBasicValue x:TypeArguments="njl:JArray" ExpressionText="invoiceFileID" />
                        </InArgument>
                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_InvoiceLineItem">
                          <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="dt_InvoiceLineTableValues" />
                        </OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="589,1908" sap2010:WorkflowViewState.IdRef="Sequence_27">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Get Invoice Header Data From Mongo DB" sap:VirtualizedContainerService.HintSize="547,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="MongoDB_Workflows\Query Mongo DB.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_pythonScriptLocation">
                    <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;Python Find Query Script Location&quot;).ToString" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_pythonMethodName">
                    <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;Python Find Query Script Method Name&quot;).ToString" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
                  <OutArgument x:TypeArguments="njl:JArray" x:Key="out_InvoiceData">
                    <VisualBasicReference x:TypeArguments="njl:JArray" ExpressionText="invoiceFileID" />
                  </OutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_queryFilter">
                    <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;Python Find Query Script Query Filter - TransactionID&quot;).ToString.Replace(&quot;&lt;TransactionID&gt;&quot;,in_TransactionItem.Reference.ToString)" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_projection">
                    <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;Python Find Query Script Header Projection - Header Data&quot;).ToString" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_LibraryPath">
                    <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;Python Library Path&quot;).ToString" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_PythonPath">
                    <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;Python Folder Path&quot;).ToString" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_MongoConnectionString">
                    <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;MongoConnectionString&quot;).ToString" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_MongoDatabaseName">
                    <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;MongoDatabaseName&quot;).ToString" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_MongoCollectionName">
                    <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;MongoCollectionName&quot;).ToString" />
                  </InArgument>
                  <InArgument x:TypeArguments="njl:JObject" x:Key="out_InvoiceJobject" />
                  <InArgument x:TypeArguments="njl:JObject" x:Key="out_InvoiceJobject2" />
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Get Header Table OCR Value from Mongo DB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="547,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="IB_Performer_Workflows\Get Header Table OCR Value from Mongo DB.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="njl:JArray" x:Key="in_InvoiceData">
                    <VisualBasicValue x:TypeArguments="njl:JArray" ExpressionText="invoiceFileID" />
                  </InArgument>
                  <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_TransposeInvoiceHeaderTable">
                    <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="dt_InvoiceHeaderTableValues" />
                  </OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <ui:IfElseIf DisplayName="Set Form Label" sap:VirtualizedContainerService.HintSize="547,1027" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
                <ui:IfElseIf.ConditionBlocks>
                  <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                    <ui:IfElseIfBlock BlockType="If" Condition="[in_TaskLabel.Contains(&quot;PO&quot;) or in_TaskLabel.Contains(&quot;po&quot;)]">
                      <ui:IfElseIfBlock.Then>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_29">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_20">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[formLabel]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">PO</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ui:IfElseIfBlock.Then>
                    </ui:IfElseIfBlock>
                    <ui:IfElseIfBlock BlockType="ElseIf" Condition="[in_TaskLabel.Contains(&quot;GL&quot;) or in_TaskLabel.Contains(&quot;gl&quot;)]">
                      <ui:IfElseIfBlock.Then>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_30">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_21">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[formLabel]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">GL</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ui:IfElseIfBlock.Then>
                    </ui:IfElseIfBlock>
                    <ui:IfElseIfBlock BlockType="ElseIf" Condition="[in_TaskLabel.Contains(&quot;DCR&quot;) OR in_TaskLabel.Contains(&quot;dcr&quot;)]">
                      <ui:IfElseIfBlock.Then>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_31">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_22">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[formLabel]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">DCR</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ui:IfElseIfBlock.Then>
                    </ui:IfElseIfBlock>
                  </sc:BindingList>
                </ui:IfElseIf.ConditionBlocks>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:IfElseIf>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="IB_Performer_Workflows\RetrieveTaskData.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="547,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="IB_Performer_Workflows\RetrieveTaskData.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_TaskID">[in_TaskID]</InArgument>
                  <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_invoiceLineTable">[dt_InvoiceLineTableValues]</OutArgument>
                  <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_invoiceHeaderTable">[dt_InvoiceHeaderTableValues]</OutArgument>
                  <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_invoiceHeaderTable">[dt_InvoiceHeaderTableValues]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="IB_Performer_Workflows\Update Verified Data in Mongo DB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="547,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="IB_Performer_Workflows\Update Verified Data in Mongo DB.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dtLineItem">[dt_InvoiceLineTableValues]</InArgument>
                  <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dtHeader">[dt_InvoiceHeaderTableValues]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_TransactionItem">[in_TransactionItem.Reference.ToString]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <upat:UpdateTaskLabels DeleteLabels="{x:Null}" TimeoutMs="{x:Null}" AddLabels="Verified value read by BOT" DisplayName="Update Task Labels" sap:VirtualizedContainerService.HintSize="547,141" sap2010:WorkflowViewState.IdRef="UpdateTaskLabels_1" TaskId="[Cint(in_TaskID)]" />
            </Sequence>
          </If.Else>
        </If>
        <FlowStep.Next>
          <FlowDecision x:Name="__ReferenceID12" Condition="[out_postponed]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_3" True="{x:Reference __ReferenceID0}" False="{x:Reference __ReferenceID4}">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <av:Point x:Key="ShapeLocation">50.400000000000006,226.39999999999998</av:Point>
                <av:Size x:Key="ShapeSize">79,87</av:Size>
                <av:PointCollection x:Key="TrueConnector">50.400000000000006,270 20.400000000000034,270 20.400000000000034,1018 710,1018 710,988</av:PointCollection>
                <av:PointCollection x:Key="FalseConnector">129.60000000000002,270 146.39999999999992,270 146.39999999999992,386.40000000000003 794.8,386.40000000000003 794.8,260 824.8,260</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </FlowDecision>
        </FlowStep.Next>
      </FlowStep>
      <x:Reference>__ReferenceID3</x:Reference>
      <x:Reference>__ReferenceID5</x:Reference>
      <x:Reference>__ReferenceID6</x:Reference>
      <x:Reference>__ReferenceID7</x:Reference>
      <FlowStep x:Name="__ReferenceID13" sap2010:WorkflowViewState.IdRef="FlowStep_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">63.19999999999999,89.2</av:Point>
            <av:Size x:Key="ShapeSize">434,81</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">280,170.8 280,203.6</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_17">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[out_postponed]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
        <FlowStep.Next>
          <x:Reference>__ReferenceID8</x:Reference>
        </FlowStep.Next>
      </FlowStep>
      <x:Reference>__ReferenceID9</x:Reference>
      <x:Reference>__ReferenceID10</x:Reference>
      <x:Reference>__ReferenceID0</x:Reference>
      <x:Reference>__ReferenceID11</x:Reference>
      <x:Reference>__ReferenceID12</x:Reference>
    </Flowchart>
  </Sequence>
</Activity>